openapi: 3.0.1
info:
  title: agrabber dashboard
  description: This is a dashboard api for adrabber
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: compitek.net@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
paths:
  /start:
    get:
      summary: start process
      description: Start grabbing process
      operationId: startProcess
      parameters:
        - name: startNumber
          in: query
          description: start number
          required: false
          schema:
            type: string
      responses:
        '200':
          description: started
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
        '400':
          description: Invalid status value
          content: {}
  /stop:
    get:
      summary: stop process
      description: Stop grabbing process
      operationId: stopProcess
      responses:
        '200':
          description: stopped
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
        '400':
          description: Invalid status value
          content: {}
  /condition:
    get:
      summary: get current condition
      description: >-
        Current condition of agrabber. Started/stopped, Range of processed
        bulletin id etc.
      operationId: getCondition
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
  /bulletins:
    get:
      summary: Find list of bulletin
      description: >-
        returns list of last bulletin. Use limit , offset , and tags to filter
        by.
      operationId: getBulletins
      parameters:
        - name: limit
          in: query
          description: number of bulletins in response (default is 10)
          required: true
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          description: how many bulletins should be offsets (default is 0)
          required: true
          schema:
            type: integer
            default: 0
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bulletin'
  '/bulletin/{id}':
    get:
      summary: Find nulletin by id
      description: Returns a single bulletin
      operationId: getBulletinById
      parameters:
        - name: id
          in: path
          description: bulletin id
          required: true
          schema:
            type: integer
            format: int64
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bulletin'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Bulletin not found
          content: {}
components:
  schemas:
    Condition:
      type: object
      properties:
        status:
          type: string
          description: process status
          enum:
            - started
            - stopped
            - unknown
        rangeFirstId:
          type: integer
          format: int64
        rangeLastId:
          type: integer
          format: int64
    Bulletin:
      type: object
      properties:
        id:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
        userId:
          type: string
        userame:
          type: string
        outLink:
          type: string
        status:
          type: string
          description: bulletin status
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
